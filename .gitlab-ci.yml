image: docker:18-dind

services:
  - name: docker:18-dind
    entrypoint: ["env", "-u", "DOCKER_HOST"]
    command: ["dockerd-entrypoint.sh"]

variables:
  DOCKER_HOST: tcp://docker:2375/
  DOCKER_DRIVER: overlay2
  # See https://github.com/docker-library/docker/pull/166
  DOCKER_TLS_CERTDIR: ""
  REGISTRY: "registry.gitlab.com/medofa/medofa-web"

stages:
  # - prepare
  - lint
  - sonar
  - build
  - deploy

.pre-deploy-dev:
  before_script:
    - apk update  && apk add --no-cache curl git
    # - curl -LO https://storage.googleapis.com/kubernetes-release/release/$(curl -s https://storage.googleapis.com/kubernetes-release/release/stable.txt)/bin/linux/amd64/kubectl
    # - chmod +x ./kubectl && mv ./kubectl /usr/local/bin/kubectl
    # - mkdir -p $HOME/.kube
    # - cp $KUBE_CONFIG_DEV $HOME/.kube/config
    - git clone https://${DOCKER_USER}:${DOCKER_PASSWORD}@gitlab.com/medofa/medofa-deployments.git

.pre-deploy-master:
  before_script:
    - apk update  && apk add --no-cache curl git
    - curl -LO https://storage.googleapis.com/kubernetes-release/release/$(curl -s https://storage.googleapis.com/kubernetes-release/release/stable.txt)/bin/linux/amd64/kubectl
    - chmod +x ./kubectl && mv ./kubectl /usr/local/bin/kubectl
    - mkdir -p $HOME/.kube
    - cp $KUBE_CONFIG $HOME/.kube/config
    - git clone -b master https://${DOCKER_USER}:${DOCKER_PASSWORD}@gitlab.com/medofa/medofa-deployments.git


lint-frontend:
  stage: lint
  image: node:12-alpine
  only:
    - merge_request
    - develop

  interruptible: true

  tags:
    - bebuy-gitlab-ci
    - bb-gitlab-ci

  script:
    - apk update && apk add yarn && rm -rf /var/cache/apk/*
    - yarn
    - yarn lint

# sonar:
#   stage: sonar
#   image: sonarsource/sonar-scanner-cli
#   only:
#     - develop
#   script:
#     - echo $SONAR_HOST_URL
#     - echo $SONAR_KEY
#     - sonar-scanner -D sonar.projectKey=bb-medofa-frontend -D sonar.sources=. -D sonar.host.url=${SONAR_HOST_URL} -D sonar.login=${SONAR_KEY} -D sonar.exclusions=src/__source_html__/** -D sonar.gitlab.commit_sha=$CI_COMMIT_SHA -D sonar.gitlab.ref_name=$CI_COMMIT_REF_NAME -D sonar.gitlab.project_id=$CI_PROJECT_ID -D sonar.gitlab.unique_issue_per_inline=true -X

#   allow_failure: true
  
#   interruptible: true
#   # allow_failure: true
#   variables:
#     SONAR_PROJECT_BASE_DIR: "${CI_PROJECT_DIR}"
#     GIT_DEPTH: 0
#   cache:
#     key: "sonar-${CI_PROJECT_ID}"
#     paths:
#       - ".scannerwork"
#       - ".sonar"

build-frontend-mr:
  stage: build
  only:
    - merge_request
    # - master

  interruptible: true

  tags:
    - bebuy-gitlab-ci
    - bb-gitlab-ci

  script:
    - docker build -t $REGISTRY .  --no-cache

build-frontend-dev:
  stage: build
  only:
    - develop
    # - master

  interruptible: true

  tags:
    - bebuy-gitlab-ci
    - bb-gitlab-ci

  before_script:
    - docker login registry.gitlab.com -u ${DOCKER_USER} -p ${DOCKER_PASSWORD}
  
  script:
    - docker build -t $REGISTRY .  --no-cache
    - docker tag $REGISTRY $REGISTRY:latest
    - docker push $REGISTRY:latest

deploy-frontend-dev:
  stage: deploy
  image:
    name: alpine/helm:3.2.4
    entrypoint: [""]
  only:
    - develop

  interruptible: true

  tags:
    - medofa-dev
  
  extends:
    - .pre-deploy-dev

  script:
    - cd ./medofa-deployments/charts/frontend
    - helm upgrade --install -n medofa frontend "./" -f "./custom-values.dev.yaml"

build-frontend-prod:
  stage: build
  only:
    - master

  interruptible: true

  tags:
    - bebuy-gitlab-ci
    - bb-gitlab-ci

  before_script:
    - docker login registry.gitlab.com -u ${DOCKER_USER} -p ${DOCKER_PASSWORD}
  
  script:
    - docker build -t $REGISTRY .  --no-cache
    - docker tag $REGISTRY $REGISTRY:prod-latest
    - docker push $REGISTRY:prod-latest

deploy-frontend-prod:
  stage: deploy
  image:
    name: alpine/helm:3.2.4
    entrypoint: [""]
  only:
    - master

  interruptible: true

  tags:
    - bebuy-gitlab-ci
  
  extends:
    - .pre-deploy-master

  script:
    - cd ./medofa-deployments/charts/frontend
    - helm upgrade --install -n medofa frontend "./" -f "./custom-values.prod.yaml"
