/*
File generated by js-routes 1.4.9
Based on Rails 6.0.2.1 routes of WebBuymed::Application
 */

(function() {
  var DeprecatedGlobbingBehavior, NodeTypes, ParameterMissing, ReservedOptions, SpecialOptionsKey, UriEncoderSegmentRegex, Utils, result, root,
    hasProp = {}.hasOwnProperty,
    slice = [].slice;

  root = typeof exports !== "undefined" && exports !== null ? exports : this;

  ParameterMissing = function(message, fileName, lineNumber) {
    var instance;
    instance = new Error(message, fileName, lineNumber);
    if (Object.setPrototypeOf) {
      Object.setPrototypeOf(instance, Object.getPrototypeOf(this));
    } else {
      instance.__proto__ = this.__proto__;
    }
    if (Error.captureStackTrace) {
      Error.captureStackTrace(instance, ParameterMissing);
    }
    return instance;
  };

  ParameterMissing.prototype = Object.create(Error.prototype, {
    constructor: {
      value: Error,
      enumerable: false,
      writable: true,
      configurable: true
    }
  });

  if (Object.setPrototypeOf) {
    Object.setPrototypeOf(ParameterMissing, Error);
  } else {
    ParameterMissing.__proto__ = Error;
  }

  NodeTypes = {"GROUP":1,"CAT":2,"SYMBOL":3,"OR":4,"STAR":5,"LITERAL":6,"SLASH":7,"DOT":8};

  DeprecatedGlobbingBehavior = false;

  SpecialOptionsKey = "_options";

  UriEncoderSegmentRegex = /[^a-zA-Z0-9\-\._~!\$&'\(\)\*\+,;=:@]/g;

  ReservedOptions = ['anchor', 'trailing_slash', 'subdomain', 'host', 'port', 'protocol'];

  Utils = {
    configuration: {
      prefix: "",
      default_url_options: {},
      special_options_key: "_options",
      serializer: null
    },
    default_serializer: function(object, prefix) {
      var element, i, j, key, len, prop, s;
      if (prefix == null) {
        prefix = null;
      }
      if (object == null) {
        return "";
      }
      if (!prefix && !(this.get_object_type(object) === "object")) {
        throw new Error("Url parameters should be a javascript hash");
      }
      s = [];
      switch (this.get_object_type(object)) {
        case "array":
          for (i = j = 0, len = object.length; j < len; i = ++j) {
            element = object[i];
            s.push(this.default_serializer(element, prefix + "[]"));
          }
          break;
        case "object":
          for (key in object) {
            if (!hasProp.call(object, key)) continue;
            prop = object[key];
            if ((prop == null) && (prefix != null)) {
              prop = "";
            }
            if (prop != null) {
              if (prefix != null) {
                key = prefix + "[" + key + "]";
              }
              s.push(this.default_serializer(prop, key));
            }
          }
          break;
        default:
          if (object != null) {
            s.push((encodeURIComponent(prefix.toString())) + "=" + (encodeURIComponent(object.toString())));
          }
      }
      if (!s.length) {
        return "";
      }
      return s.join("&");
    },
    serialize: function(object) {
      var custom_serializer;
      custom_serializer = this.configuration.serializer;
      if ((custom_serializer != null) && this.get_object_type(custom_serializer) === "function") {
        return custom_serializer(object);
      } else {
        return this.default_serializer(object);
      }
    },
    clean_path: function(path) {
      var last_index;
      path = path.split("://");
      last_index = path.length - 1;
      path[last_index] = path[last_index].replace(/\/+/g, "/");
      return path.join("://");
    },
    extract_options: function(number_of_params, args) {
      var last_el, options;
      last_el = args[args.length - 1];
      if ((args.length > number_of_params && last_el === void 0) || ((last_el != null) && "object" === this.get_object_type(last_el) && !this.looks_like_serialized_model(last_el))) {
        options = args.pop() || {};
        delete options[this.configuration.special_options_key];
        return options;
      } else {
        return {};
      }
    },
    looks_like_serialized_model: function(object) {
      return !object[this.configuration.special_options_key] && ("id" in object || "to_param" in object);
    },
    path_identifier: function(object) {
      var property;
      if (object === 0) {
        return "0";
      }
      if (!object) {
        return "";
      }
      property = object;
      if (this.get_object_type(object) === "object") {
        if ("to_param" in object) {
          if (object.to_param == null) {
            throw new ParameterMissing("Route parameter missing: to_param");
          }
          property = object.to_param;
        } else if ("id" in object) {
          if (object.id == null) {
            throw new ParameterMissing("Route parameter missing: id");
          }
          property = object.id;
        } else {
          property = object;
        }
        if (this.get_object_type(property) === "function") {
          property = property.call(object);
        }
      }
      return property.toString();
    },
    clone: function(obj) {
      var attr, copy, key;
      if ((obj == null) || "object" !== this.get_object_type(obj)) {
        return obj;
      }
      copy = obj.constructor();
      for (key in obj) {
        if (!hasProp.call(obj, key)) continue;
        attr = obj[key];
        copy[key] = attr;
      }
      return copy;
    },
    merge: function() {
      var tap, xs;
      xs = 1 <= arguments.length ? slice.call(arguments, 0) : [];
      tap = function(o, fn) {
        fn(o);
        return o;
      };
      if ((xs != null ? xs.length : void 0) > 0) {
        return tap({}, function(m) {
          var j, k, len, results, v, x;
          results = [];
          for (j = 0, len = xs.length; j < len; j++) {
            x = xs[j];
            results.push((function() {
              var results1;
              results1 = [];
              for (k in x) {
                v = x[k];
                results1.push(m[k] = v);
              }
              return results1;
            })());
          }
          return results;
        });
      }
    },
    normalize_options: function(parts, required_parts, default_options, actual_parameters) {
      var i, j, key, len, options, part, parts_options, result, route_parts, url_parameters, use_all_parts, value;
      options = this.extract_options(parts.length, actual_parameters);
      if (actual_parameters.length > parts.length) {
        throw new Error("Too many parameters provided for path");
      }
      use_all_parts = actual_parameters.length > required_parts.length;
      parts_options = {};
      for (key in options) {
        if (!hasProp.call(options, key)) continue;
        use_all_parts = true;
        if (this.indexOf(parts, key) >= 0) {
          parts_options[key] = value;
        }
      }
      options = this.merge(this.configuration.default_url_options, default_options, options);
      result = {};
      url_parameters = {};
      result['url_parameters'] = url_parameters;
      for (key in options) {
        if (!hasProp.call(options, key)) continue;
        value = options[key];
        if (this.indexOf(ReservedOptions, key) >= 0) {
          result[key] = value;
        } else {
          url_parameters[key] = value;
        }
      }
      route_parts = use_all_parts ? parts : required_parts;
      i = 0;
      for (j = 0, len = route_parts.length; j < len; j++) {
        part = route_parts[j];
        if (i < actual_parameters.length) {
          if (!parts_options.hasOwnProperty(part)) {
            url_parameters[part] = actual_parameters[i];
            ++i;
          }
        }
      }
      return result;
    },
    build_route: function(parts, required_parts, default_options, route, full_url, args) {
      var options, parameters, result, url, url_params;
      args = Array.prototype.slice.call(args);
      options = this.normalize_options(parts, required_parts, default_options, args);
      parameters = options['url_parameters'];
      result = "" + (this.get_prefix()) + (this.visit(route, parameters));
      url = Utils.clean_path(result);
      if (options['trailing_slash'] === true) {
        url = url.replace(/(.*?)[\/]?$/, "$1/");
      }
      if ((url_params = this.serialize(parameters)).length) {
        url += "?" + url_params;
      }
      url += options.anchor ? "#" + options.anchor : "";
      if (full_url) {
        url = this.route_url(options) + url;
      }
      return url;
    },
    visit: function(route, parameters, optional) {
      var left, left_part, right, right_part, type, value;
      if (optional == null) {
        optional = false;
      }
      type = route[0], left = route[1], right = route[2];
      switch (type) {
        case NodeTypes.GROUP:
          return this.visit(left, parameters, true);
        case NodeTypes.STAR:
          return this.visit_globbing(left, parameters, true);
        case NodeTypes.LITERAL:
        case NodeTypes.SLASH:
        case NodeTypes.DOT:
          return left;
        case NodeTypes.CAT:
          left_part = this.visit(left, parameters, optional);
          right_part = this.visit(right, parameters, optional);
          if (optional && ((this.is_optional_node(left[0]) && !left_part) || ((this.is_optional_node(right[0])) && !right_part))) {
            return "";
          }
          return "" + left_part + right_part;
        case NodeTypes.SYMBOL:
          value = parameters[left];
          delete parameters[left];
          if (value != null) {
            return this.encode_segment(this.path_identifier(value));
          }
          if (optional) {
            return "";
          } else {
            throw new ParameterMissing("Route parameter missing: " + left);
          }
          break;
        default:
          throw new Error("Unknown Rails node type");
      }
    },
    encode_segment: function(segment) {
      return segment.replace(UriEncoderSegmentRegex, function(str) {
        return encodeURIComponent(str);
      });
    },
    is_optional_node: function(node) {
      return this.indexOf([NodeTypes.STAR, NodeTypes.SYMBOL, NodeTypes.CAT], node) >= 0;
    },
    build_path_spec: function(route, wildcard) {
      var left, right, type;
      if (wildcard == null) {
        wildcard = false;
      }
      type = route[0], left = route[1], right = route[2];
      switch (type) {
        case NodeTypes.GROUP:
          return "(" + (this.build_path_spec(left)) + ")";
        case NodeTypes.CAT:
          return "" + (this.build_path_spec(left)) + (this.build_path_spec(right));
        case NodeTypes.STAR:
          return this.build_path_spec(left, true);
        case NodeTypes.SYMBOL:
          if (wildcard === true) {
            return "" + (left[0] === '*' ? '' : '*') + left;
          } else {
            return ":" + left;
          }
          break;
        case NodeTypes.SLASH:
        case NodeTypes.DOT:
        case NodeTypes.LITERAL:
          return left;
        default:
          throw new Error("Unknown Rails node type");
      }
    },
    visit_globbing: function(route, parameters, optional) {
      var left, right, type, value;
      type = route[0], left = route[1], right = route[2];
      value = parameters[left];
      delete parameters[left];
      if (value == null) {
        return this.visit(route, parameters, optional);
      }
      value = (function() {
        switch (this.get_object_type(value)) {
          case "array":
            return value.join("/");
          default:
            return value;
        }
      }).call(this);
      if (DeprecatedGlobbingBehavior) {
        return this.path_identifier(value);
      } else {
        return encodeURI(this.path_identifier(value));
      }
    },
    get_prefix: function() {
      var prefix;
      prefix = this.configuration.prefix;
      if (prefix !== "") {
        prefix = (prefix.match("/$") ? prefix : prefix + "/");
      }
      return prefix;
    },
    route: function(parts_table, default_options, route_spec, full_url) {
      var j, len, part, parts, path_fn, ref, required, required_parts;
      required_parts = [];
      parts = [];
      for (j = 0, len = parts_table.length; j < len; j++) {
        ref = parts_table[j], part = ref[0], required = ref[1];
        parts.push(part);
        if (required) {
          required_parts.push(part);
        }
      }
      path_fn = function() {
        return Utils.build_route(parts, required_parts, default_options, route_spec, full_url, arguments);
      };
      path_fn.required_params = required_parts;
      path_fn.toString = function() {
        return Utils.build_path_spec(route_spec);
      };
      return path_fn;
    },
    route_url: function(route_defaults) {
      var hostname, port, protocol, subdomain;
      if (typeof route_defaults === 'string') {
        return route_defaults;
      }
      hostname = route_defaults.host || Utils.current_host();
      if (!hostname) {
        return '';
      }
      subdomain = route_defaults.subdomain ? route_defaults.subdomain + '.' : '';
      protocol = route_defaults.protocol || Utils.current_protocol();
      port = route_defaults.port || (!route_defaults.host ? Utils.current_port() : void 0);
      port = port ? ":" + port : '';
      return protocol + "://" + subdomain + hostname + port;
    },
    has_location: function() {
      return (typeof window !== "undefined" && window !== null ? window.location : void 0) != null;
    },
    current_host: function() {
      if (this.has_location()) {
        return window.location.hostname;
      } else {
        return null;
      }
    },
    current_protocol: function() {
      if (this.has_location() && window.location.protocol !== '') {
        return window.location.protocol.replace(/:$/, '');
      } else {
        return 'http';
      }
    },
    current_port: function() {
      if (this.has_location() && window.location.port !== '') {
        return window.location.port;
      } else {
        return '';
      }
    },
    _classToTypeCache: null,
    _classToType: function() {
      var j, len, name, ref;
      if (this._classToTypeCache != null) {
        return this._classToTypeCache;
      }
      this._classToTypeCache = {};
      ref = "Boolean Number String Function Array Date RegExp Object Error".split(" ");
      for (j = 0, len = ref.length; j < len; j++) {
        name = ref[j];
        this._classToTypeCache["[object " + name + "]"] = name.toLowerCase();
      }
      return this._classToTypeCache;
    },
    get_object_type: function(obj) {
      if (root.jQuery && (root.jQuery.type != null)) {
        return root.jQuery.type(obj);
      }
      if (obj == null) {
        return "" + obj;
      }
      if (typeof obj === "object" || typeof obj === "function") {
        return this._classToType()[Object.prototype.toString.call(obj)] || "object";
      } else {
        return typeof obj;
      }
    },
    indexOf: function(array, element) {
      if (Array.prototype.indexOf) {
        return array.indexOf(element);
      } else {
        return this.indexOfImplementation(array, element);
      }
    },
    indexOfImplementation: function(array, element) {
      var el, i, j, len, result;
      result = -1;
      for (i = j = 0, len = array.length; j < len; i = ++j) {
        el = array[i];
        if (el === element) {
          result = i;
        }
      }
      return result;
    },
    namespace: function(root, namespace, routes) {
      var index, j, len, part, parts;
      parts = namespace ? namespace.split(".") : [];
      if (parts.length === 0) {
        return routes;
      }
      for (index = j = 0, len = parts.length; j < len; index = ++j) {
        part = parts[index];
        if (index < parts.length - 1) {
          root = (root[part] || (root[part] = {}));
        } else {
          return root[part] = routes;
        }
      }
    },
    configure: function(new_config) {
      return this.configuration = this.merge(this.configuration, new_config);
    },
    config: function() {
      return this.clone(this.configuration);
    },
    make: function() {
      var routes;
      routes = {
// about_us => /about-us(.:format)
  // function(options)
  about_us_path: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"about-us",false],[1,[2,[8,".",false],[3,"format",false]],false]]]),
// account_password => /accounts/password(.:format)
  // function(options)
  account_password_path: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"accounts",false],[2,[7,"/",false],[2,[6,"password",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]),
// account_registration => /accounts(.:format)
  // function(options)
  account_registration_path: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"accounts",false],[1,[2,[8,".",false],[3,"format",false]],false]]]),
// account_session => /accounts/sign_in(.:format)
  // function(options)
  account_session_path: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"accounts",false],[2,[7,"/",false],[2,[6,"sign_in",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]),
// agent_code_checking => /users/gioi-thieu-ban-be/:code(.:format)
  // function(code, options)
  agent_code_checking_path: Utils.route([["code",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"users",false],[2,[7,"/",false],[2,[6,"gioi-thieu-ban-be",false],[2,[7,"/",false],[2,[3,"code",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]),
// ahamove => /giao-hang/ahamove(.:format)
  // function(options)
  ahamove_path: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"giao-hang",false],[2,[7,"/",false],[2,[6,"ahamove",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]),
// api_addresses_load_all_sub_addresses => /api/addresses/load_all_sub_addresses(.:format)
  // function(options)
  api_addresses_load_all_sub_addresses_path: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"api",false],[2,[7,"/",false],[2,[6,"addresses",false],[2,[7,"/",false],[2,[6,"load_all_sub_addresses",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]),
// api_addresses_sub_addresses => /api/addresses/sub_addresses(.:format)
  // function(options)
  api_addresses_sub_addresses_path: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"api",false],[2,[7,"/",false],[2,[6,"addresses",false],[2,[7,"/",false],[2,[6,"sub_addresses",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]),
// api_apply_promo_code => /api/cart/apply-promo-code(.:format)
  // function(options)
  api_apply_promo_code_path: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"api",false],[2,[7,"/",false],[2,[6,"cart",false],[2,[7,"/",false],[2,[6,"apply-promo-code",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]),
// api_cart_data_cart_items => /api/cart_data/cart_items(.:format)
  // function(options)
  api_cart_data_cart_items_path: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"api",false],[2,[7,"/",false],[2,[6,"cart_data",false],[2,[7,"/",false],[2,[6,"cart_items",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]),
// api_cart_data_for_index_db => /api/cart/data_for_index_db(.:format)
  // function(options)
  api_cart_data_for_index_db_path: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"api",false],[2,[7,"/",false],[2,[6,"cart",false],[2,[7,"/",false],[2,[6,"data_for_index_db",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]),
// api_cart_tag_item_as_important => /api/cart/cart_items/:id/tag_as_important(.:format)
  // function(id, options)
  api_cart_tag_item_as_important_path: Utils.route([["id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"api",false],[2,[7,"/",false],[2,[6,"cart",false],[2,[7,"/",false],[2,[6,"cart_items",false],[2,[7,"/",false],[2,[3,"id",false],[2,[7,"/",false],[2,[6,"tag_as_important",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]]]]),
// api_check_order_items => /api/check-order-items(.:format)
  // function(options)
  api_check_order_items_path: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"api",false],[2,[7,"/",false],[2,[6,"check-order-items",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]),
// api_clear_promo_code => /api/cart/clear-promo-code(.:format)
  // function(options)
  api_clear_promo_code_path: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"api",false],[2,[7,"/",false],[2,[6,"cart",false],[2,[7,"/",false],[2,[6,"clear-promo-code",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]),
// api_custom_product => /api/custom_product(.:format)
  // function(options)
  api_custom_product_path: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"api",false],[2,[7,"/",false],[2,[6,"custom_product",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]),
// api_custom_product_manufacturers => /api/custom_product/manufacturers(.:format)
  // function(options)
  api_custom_product_manufacturers_path: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"api",false],[2,[7,"/",false],[2,[6,"custom_product",false],[2,[7,"/",false],[2,[6,"manufacturers",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]),
// api_find_promo_code => /api/cart/find-promo-code/:code(.:format)
  // function(code, options)
  api_find_promo_code_path: Utils.route([["code",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"api",false],[2,[7,"/",false],[2,[6,"cart",false],[2,[7,"/",false],[2,[6,"find-promo-code",false],[2,[7,"/",false],[2,[3,"code",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]]),
// api_notifications => /api/notifications(.:format)
  // function(options)
  api_notifications_path: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"api",false],[2,[7,"/",false],[2,[6,"notifications",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]),
// api_product_data_best_sellers => /api/product_data/best_sellers(.:format)
  // function(options)
  api_product_data_best_sellers_path: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"api",false],[2,[7,"/",false],[2,[6,"product_data",false],[2,[7,"/",false],[2,[6,"best_sellers",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]),
// api_product_data_deals => /api/product_data/deals(.:format)
  // function(options)
  api_product_data_deals_path: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"api",false],[2,[7,"/",false],[2,[6,"product_data",false],[2,[7,"/",false],[2,[6,"deals",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]),
// api_product_data_flash_sales => /api/product_data/flash_sales(.:format)
  // function(options)
  api_product_data_flash_sales_path: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"api",false],[2,[7,"/",false],[2,[6,"product_data",false],[2,[7,"/",false],[2,[6,"flash_sales",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]),
// api_product_data_new_products => /api/product_data/new_products(.:format)
  // function(options)
  api_product_data_new_products_path: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"api",false],[2,[7,"/",false],[2,[6,"product_data",false],[2,[7,"/",false],[2,[6,"new_products",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]),
// api_product_data_recommended_products => /api/product_data/recommended_products(.:format)
  // function(options)
  api_product_data_recommended_products_path: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"api",false],[2,[7,"/",false],[2,[6,"product_data",false],[2,[7,"/",false],[2,[6,"recommended_products",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]),
// api_products => /api/v1/products(.:format)
  // function(options)
  api_products_path: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"api",false],[2,[7,"/",false],[2,[6,"v1",false],[2,[7,"/",false],[2,[6,"products",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]),
// api_promo_codes => /api/promo_codes/add_code/:code(.:format)
  // function(code, options)
  api_promo_codes_path: Utils.route([["code",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"api",false],[2,[7,"/",false],[2,[6,"promo_codes",false],[2,[7,"/",false],[2,[6,"add_code",false],[2,[7,"/",false],[2,[3,"code",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]]),
// api_referrals => /api/referrals/resend_sms/:id(.:format)
  // function(id, options)
  api_referrals_path: Utils.route([["id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"api",false],[2,[7,"/",false],[2,[6,"referrals",false],[2,[7,"/",false],[2,[6,"resend_sms",false],[2,[7,"/",false],[2,[3,"id",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]]),
// api_search => /api/search(.:format)
  // function(options)
  api_search_path: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"api",false],[2,[7,"/",false],[2,[6,"search",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]),
// api_search_item => /api/search_item(.:format)
  // function(options)
  api_search_item_path: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"api",false],[2,[7,"/",false],[2,[6,"search_item",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]),
// api_search_po => /api/search_po(.:format)
  // function(options)
  api_search_po_path: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"api",false],[2,[7,"/",false],[2,[6,"search_po",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]),
// api_update_note => /api/update_note(.:format)
  // function(options)
  api_update_note_path: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"api",false],[2,[7,"/",false],[2,[6,"update_note",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]),
// api_update_shipment_status => /api/update_shipment_status(.:format)
  // function(options)
  api_update_shipment_status_path: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"api",false],[2,[7,"/",false],[2,[6,"update_shipment_status",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]),
// api_user_data => /api/user_data(.:format)
  // function(options)
  api_user_data_path: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"api",false],[2,[7,"/",false],[2,[6,"user_data",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]),
// apipie_apipie => /apis/doc(/:version)(/:resource)(/:method)(.:format)
  // function(options)
  apipie_apipie_path: Utils.route([["version",false],["resource",false],["method",false],["format",false]], {}, [2,[7,"/",false],[2,[6,"apis",false],[2,[7,"/",false],[2,[6,"doc",false],[2,[1,[2,[7,"/",false],[3,"version",false]],false],[2,[1,[2,[7,"/",false],[3,"resource",false]],false],[2,[1,[2,[7,"/",false],[3,"method",false]],false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]),
// apipie_apipie_checksum => /apis/doc/apipie_checksum(.:format)
  // function(options)
  apipie_apipie_checksum_path: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"apis",false],[2,[7,"/",false],[2,[6,"doc",false],[2,[7,"/",false],[2,[6,"apipie_checksum",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]),
// assign_api_products => /api/v1/products/assign(.:format)
  // function(options)
  assign_api_products_path: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"api",false],[2,[7,"/",false],[2,[6,"v1",false],[2,[7,"/",false],[2,[6,"products",false],[2,[7,"/",false],[2,[6,"assign",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]]),
// authentication_secure => /authentications/:authentication_id/secure(.:format)
  // function(authentication_id, options)
  authentication_secure_path: Utils.route([["authentication_id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"authentications",false],[2,[7,"/",false],[2,[3,"authentication_id",false],[2,[7,"/",false],[2,[6,"secure",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]),
// authentications => /authentications(.:format)
  // function(options)
  authentications_path: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"authentications",false],[1,[2,[8,".",false],[3,"format",false]],false]]]),
// bang_gia => /bang-gia(.:format)
  // function(options)
  bang_gia_path: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"bang-gia",false],[1,[2,[8,".",false],[3,"format",false]],false]]]),
// bao_gia => /bao-gia(.:format)
  // function(options)
  bao_gia_path: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"bao-gia",false],[1,[2,[8,".",false],[3,"format",false]],false]]]),
// cancel_account_registration => /accounts/cancel(.:format)
  // function(options)
  cancel_account_registration_path: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"accounts",false],[2,[7,"/",false],[2,[6,"cancel",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]),
// cancel_price_report_api_products => /api/v1/products/cancel_price_report(.:format)
  // function(options)
  cancel_price_report_api_products_path: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"api",false],[2,[7,"/",false],[2,[6,"v1",false],[2,[7,"/",false],[2,[6,"products",false],[2,[7,"/",false],[2,[6,"cancel_price_report",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]]),
// cart => /cart(.:format)
  // function(options)
  cart_path: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"cart",false],[1,[2,[8,".",false],[3,"format",false]],false]]]),
// category => /categories/:id(.:format)
  // function(id, options)
  category_path: Utils.route([["id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"categories",false],[2,[7,"/",false],[2,[3,"id",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]),
// check_demo_login => /users/check-demo-login(.:format)
  // function(options)
  check_demo_login_path: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"users",false],[2,[7,"/",false],[2,[6,"check-demo-login",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]),
// checkout => /checkout(.:format)
  // function(options)
  checkout_path: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"checkout",false],[1,[2,[8,".",false],[3,"format",false]],false]]]),
// chinh_sach_bao_mat => /chinh-sach-bao-mat(.:format)
  // function(options)
  chinh_sach_bao_mat_path: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"chinh-sach-bao-mat",false],[1,[2,[8,".",false],[3,"format",false]],false]]]),
// clear_barcode => /van-hanh/quan-ly-po/clear_barcode(.:format)
  // function(options)
  clear_barcode_path: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"van-hanh",false],[2,[7,"/",false],[2,[6,"quan-ly-po",false],[2,[7,"/",false],[2,[6,"clear_barcode",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]),
// clear_cache => /clear_cache(.:format)
  // function(options)
  clear_cache_path: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"clear_cache",false],[1,[2,[8,".",false],[3,"format",false]],false]]]),
// conditions_of_use => /conditions-of-use(.:format)
  // function(options)
  conditions_of_use_path: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"conditions-of-use",false],[1,[2,[8,".",false],[3,"format",false]],false]]]),
// create_supplier => /van-hanh/quan-ly-ncc/suppliers(.:format)
  // function(options)
  create_supplier_path: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"van-hanh",false],[2,[7,"/",false],[2,[6,"quan-ly-ncc",false],[2,[7,"/",false],[2,[6,"suppliers",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]),
// customer_support => /customer-support(.:format)
  // function(options)
  customer_support_path: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"customer-support",false],[1,[2,[8,".",false],[3,"format",false]],false]]]),
// dat_hang_nhanh => /dat-hang-nhanh(.:format)
  // function(options)
  dat_hang_nhanh_path: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"dat-hang-nhanh",false],[1,[2,[8,".",false],[3,"format",false]],false]]]),
// deals => /deals(.:format)
  // function(options)
  deals_path: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"deals",false],[1,[2,[8,".",false],[3,"format",false]],false]]]),
// demo_login => /users/demo-login(.:format)
  // function(options)
  demo_login_path: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"users",false],[2,[7,"/",false],[2,[6,"demo-login",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]),
// demo_sign_out => /users/demo-sign-out(.:format)
  // function(options)
  demo_sign_out_path: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"users",false],[2,[7,"/",false],[2,[6,"demo-sign-out",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]),
// destroy_account_session => /accounts/sign_out(.:format)
  // function(options)
  destroy_account_session_path: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"accounts",false],[2,[7,"/",false],[2,[6,"sign_out",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]),
// dich_vu => /dich-vu(.:format)
  // function(options)
  dich_vu_path: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"dich-vu",false],[1,[2,[8,".",false],[3,"format",false]],false]]]),
// dieu_khoan_su_dung => /dieu-khoan-su-dung(.:format)
  // function(options)
  dieu_khoan_su_dung_path: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"dieu-khoan-su-dung",false],[1,[2,[8,".",false],[3,"format",false]],false]]]),
// dispute_resolution => /dispute-resolution(.:format)
  // function(options)
  dispute_resolution_path: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"dispute-resolution",false],[1,[2,[8,".",false],[3,"format",false]],false]]]),
// edit_account_password => /accounts/password/edit(.:format)
  // function(options)
  edit_account_password_path: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"accounts",false],[2,[7,"/",false],[2,[6,"password",false],[2,[7,"/",false],[2,[6,"edit",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]),
// edit_account_registration => /accounts/edit(.:format)
  // function(options)
  edit_account_registration_path: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"accounts",false],[2,[7,"/",false],[2,[6,"edit",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]),
// edit_order => /edit-order/:order_id(.:format)
  // function(order_id, options)
  edit_order_path: Utils.route([["order_id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"edit-order",false],[2,[7,"/",false],[2,[3,"order_id",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]),
// edit_rails_conductor_inbound_email => /rails/conductor/action_mailbox/inbound_emails/:id/edit(.:format)
  // function(id, options)
  edit_rails_conductor_inbound_email_path: Utils.route([["id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"rails",false],[2,[7,"/",false],[2,[6,"conductor",false],[2,[7,"/",false],[2,[6,"action_mailbox",false],[2,[7,"/",false],[2,[6,"inbound_emails",false],[2,[7,"/",false],[2,[3,"id",false],[2,[7,"/",false],[2,[6,"edit",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]]]]]]),
// event_page => /events/:slug(.:format)
  // function(slug, options)
  event_page_path: Utils.route([["slug",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"events",false],[2,[7,"/",false],[2,[3,"slug",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]),
// exchange_list => /users/exchange_list(.:format)
  // function(options)
  exchange_list_path: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"users",false],[2,[7,"/",false],[2,[6,"exchange_list",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]),
// exchange_point => /users/exchange_list/:exchange_id/change(.:format)
  // function(exchange_id, options)
  exchange_point_path: Utils.route([["exchange_id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"users",false],[2,[7,"/",false],[2,[6,"exchange_list",false],[2,[7,"/",false],[2,[3,"exchange_id",false],[2,[7,"/",false],[2,[6,"change",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]]),
// general_policy => /general-policy(.:format)
  // function(options)
  general_policy_path: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"general-policy",false],[1,[2,[8,".",false],[3,"format",false]],false]]]),
// get_promo_codes => /cart/promo-codes(.:format)
  // function(options)
  get_promo_codes_path: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"cart",false],[2,[7,"/",false],[2,[6,"promo-codes",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]),
// giao_hang_tiet_kiem => /giao-hang/giao-hang-tiet-kiem(.:format)
  // function(options)
  giao_hang_tiet_kiem_path: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"giao-hang",false],[2,[7,"/",false],[2,[6,"giao-hang-tiet-kiem",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]),
// gioi_thieu_ban_be => /gioi-thieu-ban-be(.:format)
  // function(options)
  gioi_thieu_ban_be_path: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"gioi-thieu-ban-be",false],[1,[2,[8,".",false],[3,"format",false]],false]]]),
// ho_tro => /ho-tro(.:format)
  // function(options)
  ho_tro_path: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"ho-tro",false],[1,[2,[8,".",false],[3,"format",false]],false]]]),
// hoat_chat => /hoat-chat(.:format)
  // function(options)
  hoat_chat_path: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"hoat-chat",false],[1,[2,[8,".",false],[3,"format",false]],false]]]),
// how_to_order => /how-to-order(.:format)
  // function(options)
  how_to_order_path: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"how-to-order",false],[1,[2,[8,".",false],[3,"format",false]],false]]]),
// import_po => /van-hanh/quan-ly-po/import(.:format)
  // function(options)
  import_po_path: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"van-hanh",false],[2,[7,"/",false],[2,[6,"quan-ly-po",false],[2,[7,"/",false],[2,[6,"import",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]),
// import_supplier => /van-hanh/quan-ly-ncc/import(.:format)
  // function(options)
  import_supplier_path: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"van-hanh",false],[2,[7,"/",false],[2,[6,"quan-ly-ncc",false],[2,[7,"/",false],[2,[6,"import",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]),
// ingredient => /ingredients/:id(.:format)
  // function(id, options)
  ingredient_path: Utils.route([["id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"ingredients",false],[2,[7,"/",false],[2,[3,"id",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]),
// ingredients => /ingredients(.:format)
  // function(options)
  ingredients_path: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"ingredients",false],[1,[2,[8,".",false],[3,"format",false]],false]]]),
// login => /login(.:format)
  // function(options)
  login_path: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"login",false],[1,[2,[8,".",false],[3,"format",false]],false]]]),
// login_authentications => /authentications/login(.:format)
  // function(options)
  login_authentications_path: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"authentications",false],[2,[7,"/",false],[2,[6,"login",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]),
// loyalty_points => /users/loyalty_points(.:format)
  // function(options)
  loyalty_points_path: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"users",false],[2,[7,"/",false],[2,[6,"loyalty_points",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]),
// ma_giam_gia => /ma-giam-gia(.:format)
  // function(options)
  ma_giam_gia_path: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"ma-giam-gia",false],[1,[2,[8,".",false],[3,"format",false]],false]]]),
// manufacturer => /manufacturers/:id(.:format)
  // function(id, options)
  manufacturer_path: Utils.route([["id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"manufacturers",false],[2,[7,"/",false],[2,[3,"id",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]),
// manufacturers => /manufacturers(.:format)
  // function(options)
  manufacturers_path: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"manufacturers",false],[1,[2,[8,".",false],[3,"format",false]],false]]]),
// mark_all_notifications_read => /notification/read(.:format)
  // function(options)
  mark_all_notifications_read_path: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"notification",false],[2,[7,"/",false],[2,[6,"read",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]),
// missing_supplier => /van-hanh/quan-ly-ncc/sp-thieu-ncc(.:format)
  // function(options)
  missing_supplier_path: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"van-hanh",false],[2,[7,"/",false],[2,[6,"quan-ly-ncc",false],[2,[7,"/",false],[2,[6,"sp-thieu-ncc",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]),
// my_account => /my-account(.:format)
  // function(options)
  my_account_path: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"my-account",false],[1,[2,[8,".",false],[3,"format",false]],false]]]),
// my_order_show => /my-orders/:order_id(.:format)
  // function(order_id, options)
  my_order_show_path: Utils.route([["order_id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"my-orders",false],[2,[7,"/",false],[2,[3,"order_id",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]),
// my_orders => /my-orders(.:format)
  // function(options)
  my_orders_path: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"my-orders",false],[1,[2,[8,".",false],[3,"format",false]],false]]]),
// need_price_api_products => /api/v1/products/need_price(.:format)
  // function(options)
  need_price_api_products_path: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"api",false],[2,[7,"/",false],[2,[6,"v1",false],[2,[7,"/",false],[2,[6,"products",false],[2,[7,"/",false],[2,[6,"need_price",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]]),
// new_account_password => /accounts/password/new(.:format)
  // function(options)
  new_account_password_path: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"accounts",false],[2,[7,"/",false],[2,[6,"password",false],[2,[7,"/",false],[2,[6,"new",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]),
// new_account_registration => /accounts/sign_up(.:format)
  // function(options)
  new_account_registration_path: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"accounts",false],[2,[7,"/",false],[2,[6,"sign_up",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]),
// new_account_session => /accounts/sign_in(.:format)
  // function(options)
  new_account_session_path: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"accounts",false],[2,[7,"/",false],[2,[6,"sign_in",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]),
// new_rails_conductor_inbound_email => /rails/conductor/action_mailbox/inbound_emails/new(.:format)
  // function(options)
  new_rails_conductor_inbound_email_path: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"rails",false],[2,[7,"/",false],[2,[6,"conductor",false],[2,[7,"/",false],[2,[6,"action_mailbox",false],[2,[7,"/",false],[2,[6,"inbound_emails",false],[2,[7,"/",false],[2,[6,"new",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]]]]),
// news => /news(.:format)
  // function(options)
  news_path: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"news",false],[1,[2,[8,".",false],[3,"format",false]],false]]]),
// notification => /notifications/:id(.:format)
  // function(id, options)
  notification_path: Utils.route([["id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"notifications",false],[2,[7,"/",false],[2,[3,"id",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]),
// notifications => /notifications(.:format)
  // function(options)
  notifications_path: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"notifications",false],[1,[2,[8,".",false],[3,"format",false]],false]]]),
// po_checking => /van-hanh/quan-ly-po/kiem-hang(.:format)
  // function(options)
  po_checking_path: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"van-hanh",false],[2,[7,"/",false],[2,[6,"quan-ly-po",false],[2,[7,"/",false],[2,[6,"kiem-hang",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]),
// po_detail => /van-hanh/quan-ly-po/:po_id(.:format)
  // function(po_id, options)
  po_detail_path: Utils.route([["po_id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"van-hanh",false],[2,[7,"/",false],[2,[6,"quan-ly-po",false],[2,[7,"/",false],[2,[3,"po_id",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]),
// po_management => /van-hanh/quan-ly-po(.:format)
  // function(options)
  po_management_path: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"van-hanh",false],[2,[7,"/",false],[2,[6,"quan-ly-po",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]),
// price_report_api_products => /api/v1/products/price_report(.:format)
  // function(options)
  price_report_api_products_path: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"api",false],[2,[7,"/",false],[2,[6,"v1",false],[2,[7,"/",false],[2,[6,"products",false],[2,[7,"/",false],[2,[6,"price_report",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]]),
// prices => /prices(.:format)
  // function(options)
  prices_path: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"prices",false],[1,[2,[8,".",false],[3,"format",false]],false]]]),
// privacy_policy => /privacy-policy(.:format)
  // function(options)
  privacy_policy_path: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"privacy-policy",false],[1,[2,[8,".",false],[3,"format",false]],false]]]),
// product => /products/:id(.:format)
  // function(id, options)
  product_path: Utils.route([["id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"products",false],[2,[7,"/",false],[2,[3,"id",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]),
// product_report => /purchasers/product_report(.:format)
  // function(options)
  product_report_path: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"purchasers",false],[2,[7,"/",false],[2,[6,"product_report",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]),
// products => /products(.:format)
  // function(options)
  products_path: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"products",false],[1,[2,[8,".",false],[3,"format",false]],false]]]),
// promo_codes => /promo-codes(.:format)
  // function(options)
  promo_codes_path: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"promo-codes",false],[1,[2,[8,".",false],[3,"format",false]],false]]]),
// quick_order => /quick-order(.:format)
  // function(options)
  quick_order_path: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"quick-order",false],[1,[2,[8,".",false],[3,"format",false]],false]]]),
// quy_che_hoat_dong => /quy-che-hoat-dong(.:format)
  // function(options)
  quy_che_hoat_dong_path: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"quy-che-hoat-dong",false],[1,[2,[8,".",false],[3,"format",false]],false]]]),
// rails_blob_representation => /rails/active_storage/representations/:signed_blob_id/:variation_key/*filename(.:format)
  // function(signed_blob_id, variation_key, filename, options)
  rails_blob_representation_path: Utils.route([["signed_blob_id",true],["variation_key",true],["filename",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"rails",false],[2,[7,"/",false],[2,[6,"active_storage",false],[2,[7,"/",false],[2,[6,"representations",false],[2,[7,"/",false],[2,[3,"signed_blob_id",false],[2,[7,"/",false],[2,[3,"variation_key",false],[2,[7,"/",false],[2,[5,[3,"filename",false],false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]]]]]]),
// rails_conductor_inbound_email => /rails/conductor/action_mailbox/inbound_emails/:id(.:format)
  // function(id, options)
  rails_conductor_inbound_email_path: Utils.route([["id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"rails",false],[2,[7,"/",false],[2,[6,"conductor",false],[2,[7,"/",false],[2,[6,"action_mailbox",false],[2,[7,"/",false],[2,[6,"inbound_emails",false],[2,[7,"/",false],[2,[3,"id",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]]]]),
// rails_conductor_inbound_email_reroute => /rails/conductor/action_mailbox/:inbound_email_id/reroute(.:format)
  // function(inbound_email_id, options)
  rails_conductor_inbound_email_reroute_path: Utils.route([["inbound_email_id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"rails",false],[2,[7,"/",false],[2,[6,"conductor",false],[2,[7,"/",false],[2,[6,"action_mailbox",false],[2,[7,"/",false],[2,[3,"inbound_email_id",false],[2,[7,"/",false],[2,[6,"reroute",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]]]]),
// rails_conductor_inbound_emails => /rails/conductor/action_mailbox/inbound_emails(.:format)
  // function(options)
  rails_conductor_inbound_emails_path: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"rails",false],[2,[7,"/",false],[2,[6,"conductor",false],[2,[7,"/",false],[2,[6,"action_mailbox",false],[2,[7,"/",false],[2,[6,"inbound_emails",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]]),
// rails_direct_uploads => /rails/active_storage/direct_uploads(.:format)
  // function(options)
  rails_direct_uploads_path: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"rails",false],[2,[7,"/",false],[2,[6,"active_storage",false],[2,[7,"/",false],[2,[6,"direct_uploads",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]),
// rails_disk_service => /rails/active_storage/disk/:encoded_key/*filename(.:format)
  // function(encoded_key, filename, options)
  rails_disk_service_path: Utils.route([["encoded_key",true],["filename",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"rails",false],[2,[7,"/",false],[2,[6,"active_storage",false],[2,[7,"/",false],[2,[6,"disk",false],[2,[7,"/",false],[2,[3,"encoded_key",false],[2,[7,"/",false],[2,[5,[3,"filename",false],false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]]]]),
// rails_mailgun_inbound_emails => /rails/action_mailbox/mailgun/inbound_emails/mime(.:format)
  // function(options)
  rails_mailgun_inbound_emails_path: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"rails",false],[2,[7,"/",false],[2,[6,"action_mailbox",false],[2,[7,"/",false],[2,[6,"mailgun",false],[2,[7,"/",false],[2,[6,"inbound_emails",false],[2,[7,"/",false],[2,[6,"mime",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]]]]),
// rails_mandrill_inbound_emails => /rails/action_mailbox/mandrill/inbound_emails(.:format)
  // function(options)
  rails_mandrill_inbound_emails_path: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"rails",false],[2,[7,"/",false],[2,[6,"action_mailbox",false],[2,[7,"/",false],[2,[6,"mandrill",false],[2,[7,"/",false],[2,[6,"inbound_emails",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]]),
// rails_postmark_inbound_emails => /rails/action_mailbox/postmark/inbound_emails(.:format)
  // function(options)
  rails_postmark_inbound_emails_path: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"rails",false],[2,[7,"/",false],[2,[6,"action_mailbox",false],[2,[7,"/",false],[2,[6,"postmark",false],[2,[7,"/",false],[2,[6,"inbound_emails",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]]),
// rails_relay_inbound_emails => /rails/action_mailbox/relay/inbound_emails(.:format)
  // function(options)
  rails_relay_inbound_emails_path: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"rails",false],[2,[7,"/",false],[2,[6,"action_mailbox",false],[2,[7,"/",false],[2,[6,"relay",false],[2,[7,"/",false],[2,[6,"inbound_emails",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]]),
// rails_sendgrid_inbound_emails => /rails/action_mailbox/sendgrid/inbound_emails(.:format)
  // function(options)
  rails_sendgrid_inbound_emails_path: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"rails",false],[2,[7,"/",false],[2,[6,"action_mailbox",false],[2,[7,"/",false],[2,[6,"sendgrid",false],[2,[7,"/",false],[2,[6,"inbound_emails",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]]),
// rails_service_blob => /rails/active_storage/blobs/:signed_id/*filename(.:format)
  // function(signed_id, filename, options)
  rails_service_blob_path: Utils.route([["signed_id",true],["filename",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"rails",false],[2,[7,"/",false],[2,[6,"active_storage",false],[2,[7,"/",false],[2,[6,"blobs",false],[2,[7,"/",false],[2,[3,"signed_id",false],[2,[7,"/",false],[2,[5,[3,"filename",false],false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]]]]),
// referrals => /users/referrals(.:format)
  // function(options)
  referrals_path: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"users",false],[2,[7,"/",false],[2,[6,"referrals",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]),
// regulations => /regulations(.:format)
  // function(options)
  regulations_path: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"regulations",false],[1,[2,[8,".",false],[3,"format",false]],false]]]),
// reorder => /reorder/:order_id(.:format)
  // function(order_id, options)
  reorder_path: Utils.route([["order_id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"reorder",false],[2,[7,"/",false],[2,[3,"order_id",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]),
// request_invoice => /invoice/:order_id(.:format)
  // function(order_id, options)
  request_invoice_path: Utils.route([["order_id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"invoice",false],[2,[7,"/",false],[2,[3,"order_id",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]),
// reset_password_authentications => /authentications/reset_password(.:format)
  // function(options)
  reset_password_authentications_path: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"authentications",false],[2,[7,"/",false],[2,[6,"reset_password",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]),
// root => /
  // function(options)
  root_path: Utils.route([], {}, [7,"/",false]),
// san_pham => /san-pham(.:format)
  // function(options)
  san_pham_path: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"san-pham",false],[1,[2,[8,".",false],[3,"format",false]],false]]]),
// search => /van-hanh/quan-ly-po/search(.:format)
  // function(options)
  search_path: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"van-hanh",false],[2,[7,"/",false],[2,[6,"quan-ly-po",false],[2,[7,"/",false],[2,[6,"search",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]),
// search_barcode => /van-hanh/quan-ly-po/search_barcode(.:format)
  // function(options)
  search_barcode_path: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"van-hanh",false],[2,[7,"/",false],[2,[6,"quan-ly-po",false],[2,[7,"/",false],[2,[6,"search_barcode",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]),
// search_by_po => /purchasers/search_by_po(.:format)
  // function(options)
  search_by_po_path: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"purchasers",false],[2,[7,"/",false],[2,[6,"search_by_po",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]),
// search_po => /van-hanh/quan-ly-po/search(.:format)
  // function(options)
  search_po_path: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"van-hanh",false],[2,[7,"/",false],[2,[6,"quan-ly-po",false],[2,[7,"/",false],[2,[6,"search",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]),
// search_product => /purchasers/search_product(.:format)
  // function(options)
  search_product_path: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"purchasers",false],[2,[7,"/",false],[2,[6,"search_product",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]),
// shipment_detail => /giao-hang/:shipment_id(.:format)
  // function(shipment_id, options)
  shipment_detail_path: Utils.route([["shipment_id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"giao-hang",false],[2,[7,"/",false],[2,[3,"shipment_id",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]),
// shop => /shop(.:format)
  // function(options)
  shop_path: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"shop",false],[1,[2,[8,".",false],[3,"format",false]],false]]]),
// show_supplier => /van-hanh/quan-ly-ncc/suppliers/:supplier_id(.:format)
  // function(supplier_id, options)
  show_supplier_path: Utils.route([["supplier_id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"van-hanh",false],[2,[7,"/",false],[2,[6,"quan-ly-ncc",false],[2,[7,"/",false],[2,[6,"suppliers",false],[2,[7,"/",false],[2,[3,"supplier_id",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]]),
// sidekiq_web => /queues
  // function(options)
  sidekiq_web_path: Utils.route([], {}, [2,[7,"/",false],[6,"queues",false]]),
// sign_up_api_users => /api/v1/users/sign_up(.:format)
  // function(options)
  sign_up_api_users_path: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"api",false],[2,[7,"/",false],[2,[6,"v1",false],[2,[7,"/",false],[2,[6,"users",false],[2,[7,"/",false],[2,[6,"sign_up",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]]),
// signup => /signup(.:format)
  // function(options)
  signup_path: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"signup",false],[1,[2,[8,".",false],[3,"format",false]],false]]]),
// signup_authentications => /authentications/signup(.:format)
  // function(options)
  signup_authentications_path: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"authentications",false],[2,[7,"/",false],[2,[6,"signup",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]),
// signup_business => /signup_business(.:format)
  // function(options)
  signup_business_path: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"signup_business",false],[1,[2,[8,".",false],[3,"format",false]],false]]]),
// signup_business_authentications => /authentications/signup_business(.:format)
  // function(options)
  signup_business_authentications_path: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"authentications",false],[2,[7,"/",false],[2,[6,"signup_business",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]),
// supplier => /supplier/:id(.:format)
  // function(id, options)
  supplier_path: Utils.route([["id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"supplier",false],[2,[7,"/",false],[2,[3,"id",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]),
// supplier_management => /van-hanh/quan-ly-ncc(.:format)
  // function(options)
  supplier_management_path: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"van-hanh",false],[2,[7,"/",false],[2,[6,"quan-ly-ncc",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]),
// supplier_mapping => /van-hanh/quan-ly-ncc/products/:product_id/suppliers(.:format)
  // function(product_id, options)
  supplier_mapping_path: Utils.route([["product_id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"van-hanh",false],[2,[7,"/",false],[2,[6,"quan-ly-ncc",false],[2,[7,"/",false],[2,[6,"products",false],[2,[7,"/",false],[2,[3,"product_id",false],[2,[7,"/",false],[2,[6,"suppliers",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]]]]),
// terms_and_condition => /terms-and-condition(.:format)
  // function(options)
  terms_and_condition_path: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"terms-and-condition",false],[1,[2,[8,".",false],[3,"format",false]],false]]]),
// thankyou => /thankyou/:order_id(.:format)
  // function(order_id, options)
  thankyou_path: Utils.route([["order_id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"thankyou",false],[2,[7,"/",false],[2,[3,"order_id",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]),
// thuong_mai_dien_tu => /thuong-mai-dien-tu(.:format)
  // function(options)
  thuong_mai_dien_tu_path: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"thuong-mai-dien-tu",false],[1,[2,[8,".",false],[3,"format",false]],false]]]),
// update_barcode => /van-hanh/quan-ly-po/update_barcode(.:format)
  // function(options)
  update_barcode_path: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"van-hanh",false],[2,[7,"/",false],[2,[6,"quan-ly-po",false],[2,[7,"/",false],[2,[6,"update_barcode",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]),
// update_po => /van-hanh/quan-ly-po/update-po/:sku_code(.:format)
  // function(sku_code, options)
  update_po_path: Utils.route([["sku_code",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"van-hanh",false],[2,[7,"/",false],[2,[6,"quan-ly-po",false],[2,[7,"/",false],[2,[6,"update-po",false],[2,[7,"/",false],[2,[3,"sku_code",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]]),
// update_product_status => /purchasers/update_product_status(.:format)
  // function(options)
  update_product_status_path: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"purchasers",false],[2,[7,"/",false],[2,[6,"update_product_status",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]),
// update_rails_disk_service => /rails/active_storage/disk/:encoded_token(.:format)
  // function(encoded_token, options)
  update_rails_disk_service_path: Utils.route([["encoded_token",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"rails",false],[2,[7,"/",false],[2,[6,"active_storage",false],[2,[7,"/",false],[2,[6,"disk",false],[2,[7,"/",false],[2,[3,"encoded_token",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]]),
// user_promo_codes => /users/user-promo-codes(.:format)
  // function(options)
  user_promo_codes_path: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"users",false],[2,[7,"/",false],[2,[6,"user-promo-codes",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]),
// users_sign_in => /users/sign_in(.:format)
  // function(options)
  users_sign_in_path: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"users",false],[2,[7,"/",false],[2,[6,"sign_in",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]),
// users_sign_up => /users/sign_up(.:format)
  // function(options)
  users_sign_up_path: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"users",false],[2,[7,"/",false],[2,[6,"sign_up",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]),
// verify_account_api_users => /api/v1/users/verify_account(.:format)
  // function(options)
  verify_account_api_users_path: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"api",false],[2,[7,"/",false],[2,[6,"v1",false],[2,[7,"/",false],[2,[6,"users",false],[2,[7,"/",false],[2,[6,"verify_account",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]])}
;
      routes.configure = function(config) {
        return Utils.configure(config);
      };
      routes.config = function() {
        return Utils.config();
      };
      Object.defineProperty(routes, 'defaults', {
        get: function() {
          throw new Error("Routes" + ".defaults is removed. Use " + "Routes" + ".configure() instead.");
        },
        set: function(value) {}
      });
      routes.default_serializer = function(object, prefix) {
        return Utils.default_serializer(object, prefix);
      };
      return Utils.namespace(root, "Routes", routes);
    }
  };

  result = Utils.make();

  if (typeof define === "function" && define.amd) {
    define([], function() {
      return result;
    });
  }

  return result;

}).call(this);
